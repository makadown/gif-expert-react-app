{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","agregarPapu","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","palabraClave","encodeURI","url","fetch","respuesta","json","data","gifs","map","d","id","title","images","downsized_medium","GifGridItem","img","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","setCategories","c","i","ReactDOM","render","document","getElementById"],"mappings":"mMAQaA,EAAc,SAAC,GAAuB,IAApBC,EAAmB,EAAnBA,YAAmB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAiB9C,OACI,mCACI,sBAAMC,SAbO,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAG3BR,GAAa,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACrCN,EAAc,MAMd,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SArBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,e,+BCXlBG,EAAO,uCAAG,WAAMC,GAAN,yBAAAC,EAAA,6DAEbC,EAAeC,UAAUH,GAChB,2CACTI,EAAM,0CACJF,EADI,qDAJO,SAOKG,MAAMD,GAPX,cAObE,EAPa,gBAQIA,EAAUC,OARd,uBAQXC,EARW,EAQXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAM,IAAD,EACxB,MAAO,CACHC,GAAID,EAAEC,GACNC,MAAOF,EAAEE,MACTT,IAAG,UAAEO,EAAEG,cAAJ,aAAE,EAAUC,iBAAiBX,QAdrB,kBAiBZK,GAjBY,4CAAH,sDCEPO,EAAc,SAAEC,GAEzB,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAIb,IAAKgB,IAAMH,EAAIJ,QAC7B,4BAAII,EAAIJ,YCHPQ,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BsB,KAAM,GACNc,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAetC,OATAC,qBAAU,WACN1B,EAAQC,GAAU0B,MAAK,SAAAC,GACnBH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAGlB,CAACtB,IAEGuB,EDZ2BK,CAAa5B,GAAjCc,EAFuB,EAE7BN,KAAcc,EAFe,EAEfA,QAEtB,OACI,qCACA,qBAAIJ,UAAU,oCAAd,cAAoDlB,EAApD,OACEsB,GAAW,mBAAGJ,UAAU,mCAAb,qBACb,qBAAKA,UAAU,YAAf,SAGQJ,EAAOJ,KAAK,SAAEO,GACN,OAAO,cAAC,EAAD,eAA8BA,GAAZA,EAAIL,aEetCiB,EA3Ba,WACxB,IAD8B,EAEM3C,mBADd,CAAC,SADO,mBAEvB4C,EAFuB,KAEXC,EAFW,KAS9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAa9C,YAAa8C,IAC1B,uBACA,6BAEQD,EAAWpB,KAAK,SAACsB,EAAGC,GAChB,OAAO,cAAC,EAAD,CACKjC,SAAUgC,GAAbC,Y,MCjBjCC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.8960c093.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Componente para capturar una nueva categoría\r\n * @param {agregarPapu} {setCategories} Referencia a Método del useState para agregar elemento a arreglo\r\n * @returns componente AddCategory\r\n */\r\nexport const AddCategory = ( { agregarPapu } ) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            // aqui se agrega elemento al arreglo que esta en \r\n            // componente GifExpertApp mediante el metodo del useState.\r\n            agregarPapu( cats => [inputValue, ...cats, ]);\r\n            setInputValue('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={ handleSubmit }>\r\n                <input\r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                />\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\n// Candado para que se force a usar este parametro al usar este componente\r\nAddCategory.propTypes = {\r\n    agregarPapu: PropTypes.func.isRequired\r\n}","export const getGifs = async(category) => {\r\n    // encoude uri formatea la palabra clave para que pase como url param\r\n    const palabraClave = encodeURI(category);\r\n    const apiKey = 'api_key=3Ie0XE3iXNg8qBqu6WJO2J38EheOg33Z';\r\n    const url = 'https://api.giphy.com/v1/gifs/search?q=' +\r\n            palabraClave + '&limit=10&'+\r\n            apiKey;\r\n    const respuesta = await fetch(url);\r\n    const { data } = await respuesta.json();\r\n    // console.log(data);\r\n    const gifs = data.map( d => {\r\n        return { \r\n            id: d.id,\r\n            title: d.title,\r\n            url: d.images?.downsized_medium.url\r\n        };\r\n    });\r\n    return gifs;\r\n};","import React from 'react'\r\n\r\nexport const GifGridItem = ( img ) => {\r\n    // console.log('recibiendo en GifGridItem', img);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={img.url} alt={ img.title }/>\r\n            <p>{img.title}</p>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data: images, loading } = useFetchGifs(category);\r\n    \r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\"> {category} </h3>\r\n        { loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n        <div className=\"card-grid\">\r\n            \r\n            {\r\n                images.map( ( img ) => {\r\n                        return <GifGridItem key={img.id} {...img}/>\r\n                    })\r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category).then(imgs => {\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            });\r\n        });\r\n    }, [category]);\r\n\r\n    return state; // regresa { data: [], loading: true }\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    const misCategorias = ['AVGN'];\r\n    const [categories, setCategories] = useState(misCategorias);\r\n\r\n    /*const handleAdd = () => {\r\n        // setCategories([...categories, 'HunterXHunter']);\r\n        setCategories( cats => [...cats, 'HunterXHunter']);\r\n    }*/\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory agregarPapu={setCategories}></AddCategory>\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    categories.map( (c, i ) => {\r\n                        return <GifGrid \r\n                            key={i} category={c}\r\n                        />\r\n                    })\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}